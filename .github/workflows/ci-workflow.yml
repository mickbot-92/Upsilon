name: Continuous integration
#on: [pull_request, push]
on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      triggerIos:
        description: 'Run iOS tests'
        required: true
        default: 'yes'
      triggerMacos:
        description: 'Run macOS tests'
        required: true
        default: 'yes'
      trigger3DS:
        description: 'Run 3DS tests'
        required: true
        default: 'yes'
jobs:
  fxcg:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          submodules: 'recursive'
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install curl git python3 build-essential cmake pkg-config -y
      - name: Get latest gint commit hash
        run: |
          LATEST_COMMIT_HASH=$(curl --silent https://git.planet-casio.com/api/v1/repos/Lephenixnoir/gint/branches/master | jq -r .commit.id)
          echo "Latest commit hash is: $LATEST_COMMIT_HASH"
          echo "LATEST_COMMIT_HASH=$LATEST_COMMIT_HASH" >> $GITHUB_OUTPUT
        id: get-latest-commit-hash
      - name: Cache gint/fxsdk installation
        id: cache-gint
        uses: actions/cache@v3
        with:
          path: |
            ~/.local/*/*
            !~/.local/share/containers
          key: ${{ runner.os }}-gint-${{ steps.get-latest-commit-hash.outputs.LATEST_COMMIT_HASH }}
      - name: Install gint/fxsdk
        if: steps.cache-gint.outputs.cache-hit != 'true'
        env:
          URL: "https://git.planet-casio.com/Lephenixnoir/GiteaPC/archive/master.tar.gz"
        run: |
          export PATH="~/.local/bin:$PATH"
          cd "$(mktemp -d)"
          curl "$URL" -o giteapc-master.tar.gz
          tar -xzf giteapc-master.tar.gz
          cd giteapc
          python3 giteapc.py install Lephenixnoir/GiteaPC -y
          sudo apt-get install python3-pil libusb-1.0-0-dev libudev-dev libsdl2-dev libpng-dev libudisks2-dev libglib2.0-dev libmpfr-dev libmpc-dev libppl-dev -y
          giteapc install Lephenixnoir/fxsdk:noudisks2 Lephenixnoir/sh-elf-binutils Lephenixnoir/sh-elf-gcc -y
          giteapc install Lephenixnoir/OpenLibm Vhex-Kernel-Core/fxlibc Lephenixnoir/sh-elf-gcc -y
          giteapc install Lephenixnoir/gint -y
      - name: Add fxsdk to PATH
        run: echo "~/.local/bin" >> $GITHUB_PATH
      - run: make -j2 PLATFORM=simulator TARGET=fxcg
      - id: 'auth'
        if: ${{ github.event_name == 'push' && github.ref_name == 'upsilon-dev' && github.repository == 'UpsilonNumworks/Upsilon' }}
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{secrets.GOOGLE_CREDENTIALS}}'
      - id: 'upload-directory'
        if: ${{ github.event_name == 'push' && github.ref_name == 'upsilon-dev' && github.repository == 'UpsilonNumworks/Upsilon' }}
        uses: 'google-github-actions/upload-cloud-storage@v0'
        with:
          path: 'output/release/simulator/fxcg/epsilon.g3a'
          destination: 'upsilon-binfiles.appspot.com/dev/simulator/'
          parent: false
      - uses: actions/upload-artifact@master
        with:
          name: epsilon.g3a
          path: output/release/simulator/fxcg/epsilon.g3a
  nintendo_3ds:
    if: github.event.inputs.trigger3DS == 'yes' || github.event.inputs.trigger3DS == ''
    runs-on: ubuntu-latest
    container: devkitpro/devkitarm:latest
    steps:
      - uses: actions/checkout@master
        with:
          submodules: true
      - run: sudo apt-get update
      - run: sudo apt-get install build-essential imagemagick libfreetype6-dev libjpeg-dev libpng-dev pkg-config -y
      - run: yes | sudo dkp-pacman -S --needed devkitARM 3dstools libctru
      - run: wget https://github.com/3DSGuy/Project_CTR/releases/download/makerom-v0.18.4/makerom-v0.18.4-ubuntu_x86_64.zip
      - run: unzip makerom-v0.18.4-ubuntu_x86_64.zip
      - run: rm makerom-v0.18.4-ubuntu_x86_64.zip
      - run: chmod +x ./makerom
      - run: echo "PATH=.:$PATH" >> $GITHUB_ENV
      - run: make -j2 PLATFORM=simulator TARGET=3ds
      - run: make -j2 PLATFORM=simulator TARGET=3ds epsilon.cia
      - uses: actions/upload-artifact@master
        with:
          name: epsilon-3ds.3dsx
          path: output/release/simulator/3ds/epsilon.3dsx
      - uses: actions/upload-artifact@master
        with:
          name: epsilon-3ds.cia
          path: output/release/simulator/3ds/epsilon.cia
  macos:
    if: github.event.inputs.triggerMacos == 'yes' || github.event.inputs.triggerMacos == ''
    runs-on: macOS-latest
    steps:
      - run: brew install numworks/tap/epsilon-sdk
      - uses: actions/checkout@master
        with:
          submodules: 'recursive'
      - run: make -j2 PLATFORM=simulator
      - run: make -j2 PLATFORM=simulator ARCH=x86_64 test.bin
      - run: output/release/simulator/macos/x86_64/test.bin --headless
      - uses: actions/upload-artifact@master
        with:
          name: epsilon-macos.zip
          path: output/release/simulator/macos/epsilon.app
  ios:
    if: github.event.inputs.triggerIos == 'yes' || github.event.inputs.triggerIos == ''
    runs-on: macOS-latest
    steps:
      - run: brew install numworks/tap/epsilon-sdk
      - uses: actions/checkout@master
        with:
          submodules: 'recursive'
      - run: make -j2 PLATFORM=simulator TARGET=ios EPSILON_TELEMETRY=0
      - run: make -j2 PLATFORM=simulator TARGET=ios EPSILON_TELEMETRY=0 APPLE_PLATFORM=ios-simulator
      - uses: actions/upload-artifact@master
        with:
          name: epsilon-ios.ipa
          path: output/release/simulator/ios/epsilon.ipa

env:
  ACCEPT_OFFICIAL_TOS: 1
